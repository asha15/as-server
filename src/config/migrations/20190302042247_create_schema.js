
exports.up = function(knex, Promise) {
  return knex.schema.createTable('user_role', table => {
    table.increments('id').primary()
    table.string('name').notNullable()
  })
    .createTable('user_address', table => {
      table.increments('id').primary()
      table.string('line1')
      table.string('line2')
      table.string('city').notNullable()
      table.string('state').notNullable()
      table.string('country').notNullable()
      table.integer('pincode').notNullable()
    })
    .createTable('users', table => {
      table.increments('id').primary()
      table.string('first_name').notNullable()
      table.string('last_name').notNullable()
      table.string('username').notNullable().unique()
      table.string('email').notNullable().unique()
      table.integer('phone').notNullable()
      table.integer('role_id').unsigned()
        .references('id')
        .inTable('user_role')
        .notNullable()
        .onDelete('cascade')
      table.integer('address_id').unsigned()
        .references('id')
        .inTable('user_address')
        .notNullable()
        .onDelete('cascade')
    })
    .createTable('product_category', table => {
      table.increments('id').primary()
      table.string('name').notNullable().unique()
    })
    .createTable('product_state', table => {
      table.increments('id').primary()
      table.string('name').notNullable().unique()
    })
    .createTable('center', table => {
      table.increments('id').primary()
      table.string('name').notNullable()
      table.string('city').notNullable()
      table.string('email').notNullable()
    })
    .createTable('products', table => {
      table.increments('id').primary()
      table.string('name').notNullable()
      table.string('description')
      table.float('price').notNullable()
      table.integer('center_id').unsigned()
        .references('id')
        .inTable('center')
        .notNullable()
        .onDelete('cascade')
      table.integer('state_id').unsigned()
        .references('id')
        .inTable('product_state')
        .notNullable()
        .onDelete('cascade')
      table.integer('category_id').unsigned()
        .references('id')
        .inTable('product_category')
        .notNullable()
        .onDelete('cascade')
      table.integer('supplier_id').unsigned()
        .references('id')
        .inTable('users')
        .notNullable()
        .onDelete('cascade')
      table.integer('created_by_id').unsigned()
        .references('id')
        .inTable('users')
        .notNullable()
        .onDelete('cascade')
      table.integer('updated_by_id').unsigned()
        .references('id')
        .inTable('users')
        .notNullable()
        .onDelete('cascade')
      table.timestamps(false, true)
    })
    .createTable('inventory', table => {
      table.increments('id').primary()
      table.integer('product_id').unsigned()
        .references('id')
        .inTable('products')
        .notNullable()
      table.integer('center_id').unsigned()
        .references('id')
        .inTable('center')
        .notNullable()
      table.integer('count')
    })
    .createTable('image', table => {
      table.increments('id').primary()
      table.string('url').notNullable()
      table.integer('product_id').unsigned()
        .references('id')
        .inTable('products')
        .notNullable()
        .onDelete('cascade')
    })
};

exports.down = function(knex, Promise) {
  return knex.schema
    .dropTable('image')
    .dropTable('inventory')
    .dropTable('products')
    .dropTable('center')
    .dropTable('product_state')
    .dropTable('product_category')
    .dropTable('users')
    .dropTable('user_address')
    .dropTable('user_role')
};
